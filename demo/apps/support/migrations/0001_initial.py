# Generated by Django 4.2.25 on 2025-10-07 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="TicketCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Ticket Categories",
                "db_table": "ticket_categories",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "ticket_number",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                ("subject", models.CharField(max_length=300)),
                ("description", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("in_progress", "In Progress"),
                            ("waiting_customer", "Waiting on Customer"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("closed_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "assigned_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="assigned_tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="tickets",
                        to="support.ticketcategory",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tickets",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="KnowledgeBaseArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(max_length=300, unique=True)),
                ("content", models.TextField()),
                ("summary", models.CharField(blank=True, max_length=500)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("view_count", models.IntegerField(default=0)),
                ("helpful_count", models.IntegerField(default=0)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kb_articles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="kb_articles",
                        to="support.ticketcategory",
                    ),
                ),
            ],
            options={
                "db_table": "knowledge_base_articles",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=500)),
                ("answer", models.TextField()),
                ("display_order", models.IntegerField(default=0)),
                ("view_count", models.IntegerField(default=0)),
                ("is_published", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="faqs",
                        to="support.ticketcategory",
                    ),
                ),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQs",
                "db_table": "faqs",
                "ordering": ["display_order", "-view_count"],
            },
        ),
        migrations.CreateModel(
            name="TicketMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_text", models.TextField()),
                ("is_staff_reply", models.BooleanField(default=False)),
                ("is_internal_note", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "ticket",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="support.ticket",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ticket_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "ticket_messages",
                "ordering": ["created_at"],
                "indexes": [
                    models.Index(
                        fields=["ticket", "created_at"],
                        name="ticket_mess_ticket__80bcb6_idx",
                    ),
                    models.Index(
                        fields=["user", "-created_at"],
                        name="ticket_mess_user_id_8fb3b2_idx",
                    ),
                    models.Index(
                        fields=["is_staff_reply", "-created_at"],
                        name="ticket_mess_is_staf_449953_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["ticket_number"], name="tickets_ticket__4c9624_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["user", "status"], name="tickets_user_id_88df9d_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(
                fields=["status", "priority", "-created_at"],
                name="tickets_status_1fe48b_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["assigned_to", "status"], name="tickets_assigne_fc2b2b_idx"),
        ),
        migrations.AddIndex(
            model_name="ticket",
            index=models.Index(fields=["category", "status"], name="tickets_categor_c68ffb_idx"),
        ),
        migrations.AddIndex(
            model_name="knowledgebasearticle",
            index=models.Index(fields=["slug"], name="knowledge_b_slug_c6f597_idx"),
        ),
        migrations.AddIndex(
            model_name="knowledgebasearticle",
            index=models.Index(
                fields=["category", "status"], name="knowledge_b_categor_8a1637_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgebasearticle",
            index=models.Index(
                fields=["status", "-view_count"], name="knowledge_b_status_6cbddd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="knowledgebasearticle",
            index=models.Index(fields=["author", "status"], name="knowledge_b_author__1c0d74_idx"),
        ),
        migrations.AddIndex(
            model_name="faq",
            index=models.Index(fields=["category", "is_published"], name="faqs_categor_1a88d9_idx"),
        ),
        migrations.AddIndex(
            model_name="faq",
            index=models.Index(
                fields=["is_published", "-view_count"], name="faqs_is_publ_9b04d5_idx"
            ),
        ),
    ]
