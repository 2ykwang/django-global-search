# Generated by Django 4.2.25 on 2025-10-07 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(max_length=300, unique=True)),
                ("summary", models.CharField(blank=True, max_length=500)),
                ("content", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("view_count", models.IntegerField(default=0)),
                ("is_featured", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="articles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "articles",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BlogPost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("slug", models.SlugField(max_length=300, unique=True)),
                ("excerpt", models.CharField(blank=True, max_length=500)),
                ("content", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("view_count", models.IntegerField(default=0)),
                ("comment_count", models.IntegerField(default=0)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blog_posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "blog_posts",
                "ordering": ["-published_at", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="MediaFile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=300)),
                ("description", models.TextField(blank=True)),
                ("filename", models.CharField(max_length=300)),
                ("file_url", models.URLField()),
                (
                    "file_type",
                    models.CharField(
                        choices=[
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("document", "Document"),
                        ],
                        max_length=20,
                    ),
                ),
                ("file_size", models.BigIntegerField(default=0)),
                ("mime_type", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "articles",
                    models.ManyToManyField(
                        blank=True, related_name="media_files", to="content.article"
                    ),
                ),
                (
                    "blog_posts",
                    models.ManyToManyField(
                        blank=True, related_name="media_files", to="content.blogpost"
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="media_files",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "media_files",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["file_type", "-created_at"],
                        name="media_files_file_ty_fbaacc_idx",
                    ),
                    models.Index(
                        fields=["uploaded_by", "-created_at"],
                        name="media_files_uploade_c60f35_idx",
                    ),
                    models.Index(fields=["filename"], name="media_files_filenam_13f000_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("author_name", models.CharField(max_length=200)),
                ("author_email", models.EmailField(blank=True, max_length=254)),
                ("comment_text", models.TextField()),
                ("is_approved", models.BooleanField(default=False)),
                ("is_spam", models.BooleanField(default=False)),
                ("object_id", models.PositiveIntegerField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="comments",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "comments",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "is_approved"],
                        name="comments_user_id_4ddf21_idx",
                    ),
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="comments_content_cd20f6_idx",
                    ),
                    models.Index(
                        fields=["is_approved", "-created_at"],
                        name="comments_is_appr_0532d4_idx",
                    ),
                    models.Index(fields=["author_name"], name="comments_author__540863_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="blogpost",
            index=models.Index(fields=["slug"], name="blog_posts_slug_b4ca25_idx"),
        ),
        migrations.AddIndex(
            model_name="blogpost",
            index=models.Index(fields=["author", "status"], name="blog_posts_author__6ec341_idx"),
        ),
        migrations.AddIndex(
            model_name="blogpost",
            index=models.Index(
                fields=["status", "-published_at"], name="blog_posts_status_d9ff7c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(fields=["slug"], name="articles_slug_c8b0c2_idx"),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(fields=["author", "status"], name="articles_author__b3f50e_idx"),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["status", "-published_at"], name="articles_status_d18e92_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="article",
            index=models.Index(
                fields=["is_featured", "status"], name="articles_is_feat_9d8dc4_idx"
            ),
        ),
    ]
