# Generated by Django 4.2.25 on 2025-10-07 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("products", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PurchaseOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "po_number",
                    models.CharField(db_index=True, max_length=50, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("confirmed", "Confirmed"),
                            ("received", "Received"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("notes", models.TextField(blank=True)),
                ("ordered_at", models.DateTimeField(blank=True, null=True)),
                ("expected_delivery", models.DateTimeField(blank=True, null=True)),
                ("received_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "purchase_orders",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Warehouse",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(db_index=True, max_length=50, unique=True)),
                ("location_address", models.CharField(max_length=500)),
                ("city", models.CharField(max_length=100)),
                ("country", models.CharField(max_length=100)),
                ("capacity", models.IntegerField(default=0)),
                ("manager_name", models.CharField(blank=True, max_length=200)),
                ("phone_number", models.CharField(blank=True, max_length=20)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "warehouses",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["code"], name="warehouses_code_339055_idx"),
                    models.Index(fields=["is_active"], name="warehouses_is_acti_178fdd_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Supplier",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("company_name", models.CharField(max_length=300)),
                ("contact_person", models.CharField(max_length=200)),
                ("email", models.EmailField(max_length=254)),
                ("phone_number", models.CharField(max_length=20)),
                ("address", models.CharField(blank=True, max_length=500)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("website", models.URLField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "suppliers",
                "ordering": ["company_name"],
                "indexes": [
                    models.Index(fields=["company_name"], name="suppliers_company_2938da_idx"),
                    models.Index(fields=["email"], name="suppliers_email_633111_idx"),
                    models.Index(fields=["is_active"], name="suppliers_is_acti_a163b0_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField(default=0)),
                ("reserved_quantity", models.IntegerField(default=0)),
                ("available_quantity", models.IntegerField(default=0)),
                ("reorder_level", models.IntegerField(default=10)),
                ("notes", models.TextField(blank=True)),
                ("last_restocked_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="products.product",
                    ),
                ),
                (
                    "warehouse",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="stocks",
                        to="inventory.warehouse",
                    ),
                ),
            ],
            options={
                "db_table": "stocks",
                "ordering": ["-updated_at"],
            },
        ),
        migrations.CreateModel(
            name="PurchaseOrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("unit_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=12)),
                ("received_quantity", models.IntegerField(default=0)),
                ("notes", models.CharField(blank=True, max_length=500)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="po_items",
                        to="products.product",
                    ),
                ),
                (
                    "purchase_order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="inventory.purchaseorder",
                    ),
                ),
            ],
            options={
                "db_table": "purchase_order_items",
                "ordering": ["purchase_order", "id"],
            },
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="products",
            field=models.ManyToManyField(
                related_name="purchase_orders",
                through="inventory.PurchaseOrderItem",
                to="products.product",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="supplier",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="inventory.supplier",
            ),
        ),
        migrations.AddField(
            model_name="purchaseorder",
            name="warehouse",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="purchase_orders",
                to="inventory.warehouse",
            ),
        ),
        migrations.CreateModel(
            name="StockMovement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movement_type",
                    models.CharField(
                        choices=[
                            ("in", "Stock In"),
                            ("out", "Stock Out"),
                            ("transfer", "Transfer"),
                            ("adjustment", "Adjustment"),
                            ("return", "Return"),
                        ],
                        max_length=20,
                    ),
                ),
                ("quantity", models.IntegerField()),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "performed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="stock_movements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "stock",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movements",
                        to="inventory.stock",
                    ),
                ),
            ],
            options={
                "db_table": "stock_movements",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["stock", "-created_at"],
                        name="stock_movem_stock_i_44f5e3_idx",
                    ),
                    models.Index(
                        fields=["movement_type", "-created_at"],
                        name="stock_movem_movemen_829843_idx",
                    ),
                    models.Index(
                        fields=["reference_number"],
                        name="stock_movem_referen_e83e6e_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="stock",
            index=models.Index(fields=["product", "warehouse"], name="stocks_product_77ef58_idx"),
        ),
        migrations.AddIndex(
            model_name="stock",
            index=models.Index(fields=["warehouse", "quantity"], name="stocks_warehou_a635fc_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="stock",
            unique_together={("product", "warehouse")},
        ),
        migrations.AddIndex(
            model_name="purchaseorderitem",
            index=models.Index(fields=["purchase_order"], name="purchase_or_purchas_a61376_idx"),
        ),
        migrations.AddIndex(
            model_name="purchaseorderitem",
            index=models.Index(fields=["product"], name="purchase_or_product_357a28_idx"),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(fields=["po_number"], name="purchase_or_po_numb_656941_idx"),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["supplier", "status"], name="purchase_or_supplie_8a71bd_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="purchaseorder",
            index=models.Index(
                fields=["status", "-created_at"], name="purchase_or_status_7a81a7_idx"
            ),
        ),
    ]
