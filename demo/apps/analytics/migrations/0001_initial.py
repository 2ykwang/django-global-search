# Generated by Django 4.2.25 on 2025-10-07 18:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("session_id", models.CharField(db_index=True, max_length=100)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("page_view", "Page View"),
                            ("click", "Click"),
                            ("form_submit", "Form Submit"),
                            ("purchase", "Purchase"),
                            ("signup", "Sign Up"),
                            ("login", "Login"),
                            ("logout", "Logout"),
                            ("search", "Search"),
                            ("download", "Download"),
                            ("share", "Share"),
                        ],
                        max_length=50,
                    ),
                ),
                ("event_name", models.CharField(max_length=300)),
                ("event_description", models.TextField(blank=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                ("referrer_url", models.CharField(blank=True, max_length=1000)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("device_type", models.CharField(blank=True, max_length=50)),
                ("browser_name", models.CharField(blank=True, max_length=100)),
                ("os_name", models.CharField(blank=True, max_length=100)),
                ("country", models.CharField(blank=True, max_length=100)),
                ("city", models.CharField(blank=True, max_length=100)),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="events",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "events",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Conversion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "conversion_type",
                    models.CharField(
                        choices=[
                            ("signup", "Sign Up"),
                            ("purchase", "Purchase"),
                            ("subscribe", "Subscribe"),
                            ("download", "Download"),
                            ("contact", "Contact Form"),
                            ("trial", "Start Trial"),
                            ("upgrade", "Upgrade"),
                        ],
                        max_length=50,
                    ),
                ),
                ("conversion_description", models.TextField(blank=True)),
                ("campaign_name", models.CharField(blank=True, max_length=300)),
                ("campaign_source", models.CharField(blank=True, max_length=200)),
                ("campaign_medium", models.CharField(blank=True, max_length=200)),
                (
                    "conversion_value",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True),
                ),
                ("currency", models.CharField(default="USD", max_length=10)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversions",
                        to="analytics.event",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="conversions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "conversions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SessionData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "session_id",
                    models.CharField(db_index=True, max_length=100, unique=True),
                ),
                ("device_info", models.CharField(blank=True, max_length=500)),
                ("browser_info", models.CharField(blank=True, max_length=500)),
                ("screen_resolution", models.CharField(blank=True, max_length=50)),
                ("language", models.CharField(blank=True, max_length=50)),
                ("timezone", models.CharField(blank=True, max_length=100)),
                ("landing_page", models.CharField(blank=True, max_length=1000)),
                ("exit_page", models.CharField(blank=True, max_length=1000)),
                ("total_page_views", models.IntegerField(default=0)),
                ("total_events", models.IntegerField(default=0)),
                ("session_duration", models.IntegerField(default=0)),
                ("is_bounce", models.BooleanField(default=False)),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("ended_at", models.DateTimeField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sessions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "session_data",
                "ordering": ["-started_at"],
                "indexes": [
                    models.Index(fields=["session_id"], name="session_dat_session_30f6e4_idx"),
                    models.Index(
                        fields=["user", "-started_at"],
                        name="session_dat_user_id_c280fc_idx",
                    ),
                    models.Index(
                        fields=["is_bounce", "-started_at"],
                        name="session_dat_is_boun_c08947_idx",
                    ),
                    models.Index(fields=["device_info"], name="session_dat_device__38f273_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="PageView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("page_url", models.CharField(max_length=1000)),
                ("page_title", models.CharField(max_length=300)),
                ("page_description", models.TextField(blank=True)),
                ("page_path", models.CharField(max_length=500)),
                ("query_string", models.CharField(blank=True, max_length=500)),
                ("time_on_page", models.IntegerField(default=0)),
                ("scroll_depth", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "event",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="page_view",
                        to="analytics.event",
                    ),
                ),
            ],
            options={
                "db_table": "page_views",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["event", "-created_at"],
                        name="page_views_event_i_58d1ee_idx",
                    ),
                    models.Index(
                        fields=["page_path", "-created_at"],
                        name="page_views_page_pa_9372a8_idx",
                    ),
                    models.Index(fields=["page_title"], name="page_views_page_ti_47aae7_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["user", "-created_at"], name="events_user_id_137ee1_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["session_id", "-created_at"], name="events_session_4d2560_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["event_type", "-created_at"], name="events_event_t_c02cd6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["event_name"], name="events_event_n_2ee51e_idx"),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(fields=["created_at"], name="events_created_9e2206_idx"),
        ),
        migrations.AddIndex(
            model_name="conversion",
            index=models.Index(
                fields=["user", "-created_at"], name="conversions_user_id_10afd7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="conversion",
            index=models.Index(
                fields=["conversion_type", "-created_at"],
                name="conversions_convers_c466e5_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="conversion",
            index=models.Index(fields=["campaign_name"], name="conversions_campaig_404291_idx"),
        ),
        migrations.AddIndex(
            model_name="conversion",
            index=models.Index(
                fields=["campaign_source", "campaign_medium"],
                name="conversions_campaig_8f58c4_idx",
            ),
        ),
    ]
